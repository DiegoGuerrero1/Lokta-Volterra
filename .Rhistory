source("~/.active-rstudio-document", echo=TRUE)
install.packages('gauseR')
knitr::opts_chunk$set(echo = TRUE)
library(gauseR)
data("gause_1934_science_f02_03")
Paramecium_caudatum = gause_1934_science_f02_03
View(gause_1934_science_f02_03)
knitr::opts_chunk$set(echo = TRUE)
plot(Volume_Species1~Day.data=Paramecium_caudatum)
plot(Volume_Species1~Day.data<-Paramecium_caudatum)
gause_1934_science_f02_03
plot(Paramecium_caudatum.Volume_Species1~Day.data=Paramecium_caudatum)
plot(Paramecium_caudatum.Volume_Species1~Day.data)
plot(Paramecium_caudatum$Volume_Species1~Day.data)
knitr::opts_chunk$set(echo = TRUE)
require(gauseR)
data("gause_1934_science_f02_03")
Paramecium_caudatum = gause_1934_science_f02_03
Paramecium_caudatum = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment == "Pc",]
Paramecium_caudatum <- gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment == "Pc",]
View(Paramecium_caudatum)
names(Paramecium_caudatum)
plot(Paramecium_caudatum$Species1 ~ Paramecium_caudatum$Day)
?plot
library(ggplot2)
?ggplo
?ggplot
plot(Paramecium_caudatum$Species1 ~ Paramecium_caudatum$Day)
ggplot(Paramecium_caudatum, aes(Volume_Species1, Day))
ggplot(Paramecium_caudatum, aes(Day,Volume_Species1))
ggplot(Paramecium_caudatum)
plot(Paramecium_caudatum$Species1 ~ Paramecium_caudatum$Day)
ggplot(Paramecium_caudatum, aes(Day,Volume_Species1))
View(Paramecium_caudatum) #Checamos dataset, debería contener sólo datos de Paraceum caudatum.
data("gause_1934_science_f02_03")
Paramecium_caudatum <- gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment == "Pc",]
names(Paramecium_caudatum) #Contiene columnas "Day" y "Volume_Species1"
ggplot(Paramecium_caudatum, aes(Day,Volume_Species1))
summary(gause_1934_science_f02_03)
#Exploramos nuestros datos
View(gause_1934_science_f02_03)
plot(data.frame(Paramecium_caudatum) $Species1 ~ Paramecium_caudatum$Day)
#Graficamos las columnas, volumen... (y) vs Day(x)
class(Paramecium_caudatum)
plot(Species1 ~ Day.data=Paramecium_caudatum)
plot(Species1 ~ Day.data==Paramecium_caudatum)
plot(Species1 ~ Day.data(Paramecium_caudatum))
ggplot(Paramecium_caudatum, aes(Day,Volume_Species1))
plot(Paramecium_caudatum$Volume_Species1~Paramecium_caudatum$)
plot(Paramecium_caudatum$Volume_Species1~Paramecium_caudatum$Day)
ggplot(Paramecium_caudatum, aes(Day,Volume_Species1))
plot(Paramecium_caudatum$Volume_Species1~Paramecium_caudatum$Day)
ggplot(Paramecium_caudatum, aes(Day, volume_Species1))
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot2
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
? ggplot()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
?ggplot2()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_abline()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_point()
plot(Paramecium_caudatum$Volume_Species1~Paramecium_caudatum$Day)
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_point()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_contour()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(gauseR)
require(gauseR)
library(ggplot2)
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path()+
scale_x_log10() + scale_y_log10()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path() #graficamos con linea para ver mejor la tendencia de los datos
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path()+
scale_x_log10() + scale_y_log10()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path()+
scale_y_log10()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path()+
scale_y_sqrt()
ggplot(Paramecium_caudatum, aes(Day, Volume_Species1))+
geom_path() #graficamos con linea para ver mejor la tendencia de los datos
#Calculando abundancia retardada en tiempo usando el comando gat_lag de gauseR
?get_lag
lagged_data <- get_lag(x = Paramecium_caudatum$Volume_Species1, time = Paramecium_caudatum$Day)
summary(lagged_data)
lagged_data
Paramecium_caudatum$dNNdt <- percap_growth(x = lagged_data$x, laggedx = lagged_data$laggedx, dt = lagged_data$dt)
head(Paramecium_caudatum)
plot(Paramecium_caudatum$dNNdt ~ Paramecium_caudatum$Volume_Species1, xlab = "Abundancia de el retraso (N)", ylab = "tasa de crecimiento per-cápita (dN/Ndt)", xlim = c(0,250), ylim = c(0,1))
plot(Paramecium_caudatum$dNNdt ~ Paramecium_caudatum$Volume_Species1, xlab = "Abundancia del retraso (N)", ylab = "tasa de crecimiento per-cápita (dN/Ndt)", xlim = c(0,250), ylim = c(0,1))
ggplot(Paramecium_caudatum, axis(dNNdt, Volume_Species1))+
xlab("Abundancia del retraso (N)") + ylab("tasa de crecimiento per-cápita (dN/Ndt)")+
xlim(c(0,250), ylim = c(0,1))+
geom_point()
ggplot(Paramecium_caudatum, axis(dNNdt, Volume_Species1))+
xlab("Abundancia del retraso (N)") + ylab("tasa de crecimiento per-cápita (dN/Ndt)")+
xlim(c(0,250), ylim = c(0,1))+
geom_point()
plot(Paramecium_caudatum$dNNdt ~ Paramecium_caudatum$Volume_Species1, xlab = "Abundancia del retraso (N)", ylab = "tasa de crecimiento per-cápita (dN/Ndt)", xlim = c(0,250), ylim = c(0,1))
modelo_PC = lm(Paramecium_caudatum$Volume_Species1 ~ Paramecium_caudatum$dNNdt)
#Graficamos el modelo como una línea roja
abline(modelo_PC, lwd = 2, col = 2)
#Graficamos el modelo como una línea roja
plot(modelo_PC)
abline(modelo_PC, lwd = 2, col = 2)
#Graficamos el modelo como una línea roja
plot(modelo_PC)
#Graficamos el modelo como una línea roja
plot(modelo_PC)+ albine(lwd = 2, col = 2)
#Graficamos el modelo como una línea roja
plot(modelo_PC)+abline(modelo_PC, lwd= 2, col = 2)
#Graficamos el modelo como una línea roja
plot(modelo_PC)
#Graficamos el modelo como una línea roja
plot(modelo_PC)+abline(modelo_PC, lwd= 2, col = 2)
parametros_rsn <- coef(modelo_PC)
summary(Paramecium_caudatum)
# Transformamos los paráetros a una escala logística
par_logist <- c(r = unname(rsn_pars["(Intercept)"]),
K=unname(-rsn_pars["(Intercept)"]/rsn_pars["Volume_Species1"]))
knitr::opts_chunk$set(echo = TRUE)
modelo_nls <- nls(Volume_Species ~ get_logistic(time = Day, N0, r,K),
data = Paramecium_caudatum,
start = c(N0 = unname(Paramecium_caudatum$Volume_Species1[which.min(Paramecium_caudatum$Day)]), r = unname(par_logist["r"]), K = unname(par_logist["K"])))
# Transformamos los paráetros a una escala logística
par_logist <- c(r = unname(parametros_rsn["(Intercept)"]),
K=unname(-parametros_rsn["(Intercept)"]/parametros_rsn["Volume_Species1"]))
modelo_nls <- nls(Volume_Species ~ get_logistic(time = Day, N0, r,K),
data = Paramecium_caudatum,
start = c(N0 = unname(Paramecium_caudatum$Volume_Species1[which.min(Paramecium_caudatum$Day)]), r = unname(par_logist["r"]), K = unname(par_logist["K"])))
modelo_nls <- nls(Volume_Species1 ~ get_logistic(time = Day, N0, r,K),
data = Paramecium_caudatum,
start = c(N0 = unname(Paramecium_caudatum$Volume_Species1[which.min(Paramecium_caudatum$Day)]), r = unname(par_logist["r"]), K = unname(par_logist["K"])))
?get_logistic
